name: Docker Image Publish

on:
  push:
    branches: ['main']
    # Publica releases para tags semânticas (ex.: v1.0.0).
    tags: ['v*.*.*']

env:
  REGISTRY: ghcr.io # Use docker.io para o Docker Hub se necessário
  IMAGE_NAME: ${{ github.repository }} # Nome da imagem no formato <usuario>/<repositorio>

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # Necessário para ações de autenticação

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configuração do BuildKit para build avançado
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      # Login no registry (não executa em pull requests)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extração de metadados para tags e labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build e push da imagem Docker (não faz push em PRs)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
